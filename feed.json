{
    "version": "https://jsonfeed.org/version/1",
    "title": "Nitish Jadia",
    "home_page_url": "https://jadia.dev",
    "feed_url": "https://jadia.dev/feed.json",
    "description": "A blog where I publish posts about my learnings on software development, my thoughts, my ideas and topics that I find interesting.",
    "icon": "https://jadia.dev/assets/ms-icon-310x310.png",
    "favicon": "https://jadia.dev/favicon.ico",
    "expired": false,
    "author": {
        "name": "Nitish Jadia",
        "url": "https://jadia.dev"
    },
    "items": [
        
        {
            "id": "https://jadia.dev/2021/05/16/Encrypt_and_backup_files_to_object_storage",
            "url": "https://jadia.dev/2021/05/16/Encrypt_and_backup_files_to_object_storage",
            "title": "Encrypt and backup personal files to an object storage",
            "date_published": "2021-05-16T14:51:00+00:00",
            
            "date_modified": "2021-05-16T14:51:00+00:00",
            
            "author": {
                "name": "Nitish Jadia",
                "url": "https://jadia.dev"
            },
            "summary": "<p>I feel that cloud backups are expensive, look at Dropbox, Google Drive, OneDrive, etc. BlackBlaze B2, <em>seems</em> to be a good for long term backups where you upload and forget, download only when we are required.<br />\nIt’s important to have your personal files encrypted when stored on the cloud, you never know about another <a href=\"https://en.wikipedia.org/wiki/ICloud_leaks_of_celebrity_photos\">iCloud hack</a>.</p>\n\n",
            "content_html": "<p>I feel that cloud backups are expensive, look at Dropbox, Google Drive, OneDrive, etc. BlackBlaze B2, <em>seems</em> to be a good for long term backups where you upload and forget, download only when we are required.<br />\nIt’s important to have your personal files encrypted when stored on the cloud, you never know about another <a href=\"https://en.wikipedia.org/wiki/ICloud_leaks_of_celebrity_photos\">iCloud hack</a>.</p>\n\n<h4 id=\"install-gocryptfs-and-rclone\">Install GocryptFS and rClone</h4>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">sudo </span>apt <span class=\"nb\">install</span> <span class=\"nt\">-y</span> gocryptfs\ncurl https://rclone.org/install.sh | <span class=\"nb\">sudo </span>bash\n</code></pre></div></div>\n\n<h4 id=\"set-up-object-storage\">Set up object storage</h4>\n\n<p>Register at <a href=\"https://www.backblaze.com/b2/cloud-storage.html\">https://www.backblaze.com/b2/cloud-storage.html</a>. Make sure to read the <a href=\"https://www.backblaze.com/b2/cloud-storage-pricing.html\">pricing details</a> and your <a href=\"https://secure.backblaze.com/b2_caps_alerts.htm\">usage statistic</a>.</p>\n\n<p>Use <code class=\"language-plaintext highlighter-rouge\">rclone config</code> to configure B2 object storage. Follow this guide: <a href=\"https://rclone.org/b2/\">https://rclone.org/b2/</a>.</p>\n\n<p><img src=\"/assets/posts/2021-05-16-Encrypt_and_backup_files_to_object_storage/2021-05-16-22-04-41.png\" alt=\"rclone config\" /></p>\n\n<p>Go to Blackblaze B2 website and click on <strong>App keys</strong> and generate a new set of keys for rclone.\n<img src=\"/assets/posts/2021-05-16-Encrypt_and_backup_files_to_object_storage/2021-05-16-22-07-10.png\" alt=\"\" /></p>\n\n<p>Add a new Application Key and copy the key ID and set it up in rclone.</p>\n\n<p><img src=\"/assets/posts/2021-05-16-Encrypt_and_backup_files_to_object_storage/2021-05-16-22-07-48.png\" alt=\"\" />\n<img src=\"/assets/posts/2021-05-16-Encrypt_and_backup_files_to_object_storage/2021-05-16-22-34-18.png\" alt=\"\" /></p>\n\n<p>The name of the remote is <code class=\"language-plaintext highlighter-rouge\">b2-backup</code>. I can use this name to connect with the Blackblaze server and perform operations like <em>sync</em>, <em>dir list</em>, etc.</p>\n\n<p>Create a new bucket using the following command:</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>rclone <span class=\"nb\">mkdir </span>b2-backup:photo-bucket\n</code></pre></div></div>\n\n<p>Make sure to use <code class=\"language-plaintext highlighter-rouge\">-</code> instead of <code class=\"language-plaintext highlighter-rouge\">_</code> for the bucket name.</p>\n\n<h4 id=\"create-a-folder-to-store-encrypted-files\">Create a folder to store encrypted files</h4>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">mkdir </span>backup-crypt\ngocryptfs <span class=\"nt\">-init</span> <span class=\"nt\">-plaintextnames</span> backup-crypt\n\n<span class=\"c\"># -plaintextnames : Do not encrypt the names of the files and folder</span>\n<span class=\"c\">#                   this helps when we are trying to recover lost files</span>\n<span class=\"c\">#                   Skip this option if you wish to hide the names of files</span>\n</code></pre></div></div>\n\n<p><strong>Make sure to store the keys properly</strong></p>\n\n<h4 id=\"mount-the-encrypted-files\">Mount the encrypted files</h4>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">mkdir </span>private\ngocryptfs backup-crypt private\n</code></pre></div></div>\n\n<p>Copy and paste files in the <code class=\"language-plaintext highlighter-rouge\">private</code> directory and the encrypted counter part will be reflected in the <code class=\"language-plaintext highlighter-rouge\">backup-crypt</code> directory.</p>\n\n<h4 id=\"sync-encrypted-files\">Sync encrypted files</h4>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>rclone <span class=\"nb\">sync</span> <span class=\"nt\">--progress</span> backup-crypt/ b2-backup:photo-bucket\n</code></pre></div></div>\n\n<h4 id=\"unmount-the-private-directory-and-stay-safe-\">Unmount the <code class=\"language-plaintext highlighter-rouge\">private</code> directory and stay safe 🔒</h4>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>fusermount <span class=\"nt\">-u</span> private\n</code></pre></div></div>\n\n<p>Just make sure that you keep eye on the free limits. You can try to do a small sync everyday to save money on the transfer cost.</p>\n\n<p><img src=\"/assets/posts/2021-05-16-Encrypt_and_backup_files_to_object_storage/2021-05-16-23-17-53.png\" alt=\"\" /></p>\n\n<h2 id=\"references\">References</h2>\n\n<ol>\n  <li><a href=\"https://defuse.ca/downloads/audits/gocryptfs-cryptography-design-audit.pdf\">Gocryptfs security audit</a></li>\n</ol>\n",
            "tags": ["Linux"],
            "image": "https://jadia.dev/%7B%22path%22=%3E%22/assets/social-devops-python-preview.png%22,%20%22width%22=%3E1200,%20%22height%22=%3E628%7D"
        },
        
        {
            "id": "https://jadia.dev/2020/12/15/python-fan-speed",
            "url": "https://jadia.dev/2020/12/15/python-fan-speed",
            "title": "Get notification when laptop fan turns on",
            "date_published": "2020-12-15T15:50:00+00:00",
            
            "date_modified": "2020-12-15T15:50:00+00:00",
            
            "author": {
                "name": "Nitish Jadia",
                "url": "https://jadia.dev"
            },
            "summary": "<p>I have a habit of putting my ultrabook on bed (vents are blocked) because the fans rarely start. But when it does I make sure to give enough room for fans to work.</p>\n\n",
            "content_html": "<p>I have a habit of putting my ultrabook on bed (vents are blocked) because the fans rarely start. But when it does I make sure to give enough room for fans to work.</p>\n\n<p>Below is a script I made to get notification on Ubuntu when fan starts. The script checks the fan status every few seconds and notifies the user if fan is running and goes to sleep for 5min.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\npip <span class=\"nb\">install </span>psutil\n\n</code></pre></div></div>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n<span class=\"c1\">#!/usr/bin/env python3\n</span>\n<span class=\"kn\">import</span> <span class=\"nn\">psutil</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">datetime</span> <span class=\"k\">as</span> <span class=\"n\">dt</span>\n\n<span class=\"c1\">## Logging\n</span>\n<span class=\"n\">logfile_name</span> <span class=\"o\">=</span> <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s\">'fan_status_</span><span class=\"si\">%</span><span class=\"s\">Y_</span><span class=\"si\">%</span><span class=\"s\">m_</span><span class=\"si\">%</span><span class=\"s\">d.log'</span><span class=\"p\">)</span>\n<span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"s\">'/home/nitish/cron'</span>\n<span class=\"n\">logfile_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span><span class=\"s\">'logs'</span><span class=\"p\">,</span><span class=\"n\">logfile_name</span><span class=\"p\">)</span>\n\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">basicConfig</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"n\">logfile_path</span><span class=\"p\">,</span>\n                            <span class=\"n\">filemode</span><span class=\"o\">=</span><span class=\"s\">'a'</span><span class=\"p\">,</span>\n                            <span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s\">'</span><span class=\"si\">%(pathname)</span><span class=\"s\">s, </span><span class=\"si\">%(asctime)</span><span class=\"s\">s, </span><span class=\"si\">%(levelname)</span><span class=\"s\">s </span><span class=\"si\">%(message)</span><span class=\"s\">s'</span><span class=\"p\">,</span>\n                            <span class=\"n\">datefmt</span><span class=\"o\">=</span><span class=\"s\">'</span><span class=\"si\">%</span><span class=\"s\">H:</span><span class=\"si\">%</span><span class=\"s\">M:</span><span class=\"si\">%</span><span class=\"s\">S'</span><span class=\"p\">,</span>\n                            <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s\">'fan_speed'</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s\">\"Process started.\"</span><span class=\"p\">)</span>\n<span class=\"n\">fan_running</span> <span class=\"o\">=</span> <span class=\"bp\">False</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"k\">while</span> <span class=\"bp\">True</span><span class=\"p\">:</span>\n        <span class=\"n\">fan_speed</span> <span class=\"o\">=</span> <span class=\"n\">psutil</span><span class=\"o\">.</span><span class=\"n\">sensors_fans</span><span class=\"p\">()[</span><span class=\"s\">'dell_smm'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"c1\"># output: {'dell_smm': [sfan(label='', current=0)]}\n</span>        <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"s\">'fan_speed: {fan_speed}'</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">fan_speed</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">fan_running</span><span class=\"p\">:</span>\n            <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s\">\"Fan started running! Sleeping for 5min.\"</span><span class=\"p\">)</span>\n            <span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"s\">'notify-send \"Fan started! {fan_speed} RPM\" -t 20000 -u critical'</span>\n            <span class=\"n\">fan_running</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n            <span class=\"n\">sleep_time</span> <span class=\"o\">=</span> <span class=\"mi\">300</span> <span class=\"c1\"># seconds\n</span>        <span class=\"k\">elif</span> <span class=\"n\">fan_speed</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span> <span class=\"ow\">and</span> <span class=\"n\">fan_running</span><span class=\"p\">:</span>\n            <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s\">\"Fan still running! Sleeping for 5min.\"</span><span class=\"p\">)</span>\n            <span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"s\">'notify-send \"Fan speed: {fan_speed} RPM\" -t 10000 -u normal'</span>\n            <span class=\"n\">sleep_time</span> <span class=\"o\">=</span> <span class=\"mi\">300</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">fan_running</span><span class=\"p\">:</span>\n                <span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"s\">'notify-send \"Fan stopped!\" -t 20000 -u low'</span>\n                <span class=\"n\">fan_running</span> <span class=\"o\">=</span> <span class=\"bp\">False</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n            <span class=\"c1\"># log.info(\"Fan not running\")\n</span>            <span class=\"n\">sleep_time</span> <span class=\"o\">=</span> <span class=\"mi\">15</span>\n        <span class=\"k\">if</span> <span class=\"n\">cmd</span><span class=\"p\">:</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">system</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">)</span>\n        <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">sleep_time</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"nb\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">exception</span><span class=\"p\">(</span><span class=\"s\">\"Something went wrong.\"</span><span class=\"p\">)</span>\n\n</code></pre></div></div>\n\n<p>But this script won’t be able to show the notification because of how <code class=\"language-plaintext highlighter-rouge\">notify-send</code> works.</p>\n\n<p>If you are using Ubuntu 20.04(Gnome) in GUI mode then you can go to <strong>Start up applications</strong> and add your script over there.</p>\n\n<p>Since, I’m using i3wm (another window manager) I had to find a workaround for the script to run in <code class=\"language-plaintext highlighter-rouge\">crontab</code>.</p>\n\n<p>Adding <strong>target DISPLAY</strong> to crontab helps.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n<span class=\"c\">#Check the value of DISPLAY var</span>\n<span class=\"nb\">echo</span> <span class=\"nv\">$DISPLAY</span>\n<span class=\"c\"># output: :0</span>\ncrontab <span class=\"nt\">-e</span>\n\n</code></pre></div></div>\n\n<p>So I will add the following lines in the crontab.</p>\n\n<div class=\"language-vim highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\nDISPLAY<span class=\"p\">=:</span><span class=\"m\">0</span>\n@reboot bash <span class=\"p\">-</span><span class=\"k\">c</span> <span class=\"s2\">\"/home/nitish/cron/fan_status.py\"</span>\n\n</code></pre></div></div>\n\n<p>Cheers! :beers:</p>\n",
            "tags": ["Python"],
            "image": "https://jadia.dev/%7B%22path%22=%3E%22/assets/social-devops-python-preview.png%22,%20%22width%22=%3E1200,%20%22height%22=%3E628%7D"
        },
        
        {
            "id": "https://jadia.dev/2020/09/10/connecting-google-service-account-with-kubernetes-service-account",
            "url": "https://jadia.dev/2020/09/10/connecting-google-service-account-with-kubernetes-service-account",
            "title": "Connecting Google Service Account with Kubernetes Service Account",
            "date_published": "2020-09-10T14:52:00+00:00",
            
            "date_modified": "2020-09-10T14:52:00+00:00",
            
            "author": {
                "name": "Nitish Jadia",
                "url": "https://jadia.dev"
            },
            "summary": "<h2 id=\"3-ways-to-access-a-google-cloud-resource\">3 ways to access a Google Cloud Resource:</h2>\n\n<p>Your containers and Pods might need access to other resources in Google Cloud. There are three ways to do this.</p>\n\n",
            "content_html": "<h2 id=\"3-ways-to-access-a-google-cloud-resource\">3 ways to access a Google Cloud Resource:</h2>\n\n<p>Your containers and Pods might need access to other resources in Google Cloud. There are three ways to do this.</p>\n\n<p>Below is a part extracted from the <a href=\"https://cloud.google.com/kubernetes-engine/docs/concepts/security-overview#giving_pods_access_to_resources\">Google Docs</a>:</p>\n\n<blockquote>\n  <h3 id=\"workload-identity-recommended\"><strong>Workload Identity (recommended)</strong></h3>\n\n  <p>The simplest and most secure way to authorize Pods to access Google Cloud resources is with <a href=\"https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity\">Workload Identity</a>. Workload identity allows a Kubernetes service account to run as a <a href=\"https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity\">Google Cloud service account</a>. Pods that run as the Kubernetes service account have the permissions of the Google Cloud service account.</p>\n\n  <p>Workload Identity can be used with <a href=\"https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods\">GKE Sandbox</a>.</p>\n\n  <h3 id=\"node-service-account\"><strong>Node Service Account</strong></h3>\n\n  <p>Your Pods can also authenticate to Google Cloud using the Kubernetes clusters’ <a href=\"https://cloud.google.com/compute/docs/access/service-accounts\">service account</a> credentials from metadata. However, these credentials can be reached by any Pod running in the cluster if Workload Identity is not enabled. Create and configure a custom service account that has the <a href=\"https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#use_least_privilege_sa\">minimum IAM roles</a> that are required by all the Pods running in the cluster.</p>\n\n  <p>This approach is not compatible with <a href=\"https://cloud.google.com/kubernetes-engine/docs/how-to/sandbox-pods\">GKE Sandbox</a> because GKE Sandbox blocks access to the metadata server.</p>\n\n  <h3 id=\"service-account-json-key\"><strong>Service Account JSON key</strong></h3>\n\n  <p>A third way to grant credentials for Google Cloud resources to applications is to manually use the <a href=\"https://cloud.google.com/iam/docs/creating-managing-service-account-keys\">service account’s key</a>. This approach is strongly discouraged because of the difficulty of securely managing account keys.</p>\n\n  <p>You should use <a href=\"https://cloud.google.com/kubernetes-engine/docs/tutorials/authenticating-to-cloud-platform\">application-specific Google Cloud service accounts to provide credentials</a> so that applications have the minimal necessary permissions. Each service account is assigned only the IAM roles that are needed for its paired application to operate successfully. Keeping the service account application-specific makes it easier to revoke its access in the case of a compromise without affecting other applications. Once you have assigned your service account the correct IAM roles, you can create a JSON service account key, and then mount that into your Pod using a Kubernetes <a href=\"https://cloud.google.com/kubernetes-engine/docs/concepts/secret\">Secret</a>.</p>\n</blockquote>\n\n<h2 id=\"connecting-google-service-account-with-kubernetes-service-account\">Connecting Google service account with Kubernetes service account</h2>\n\n<p>This requires Workload identity to work.</p>\n\n<h1 id=\"pre-requisites\">Pre-requisites:</h1>\n\n<ol>\n  <li>Google service account with roles required by the application.</li>\n</ol>\n\n<h3 id=\"conditions\">Conditions:</h3>\n\n<ol>\n  <li>The cluster MUST have workload identity enabled</li>\n  <li>The node pool’s <code class=\"language-plaintext highlighter-rouge\">workload-metadata</code> MUST be set as <code class=\"language-plaintext highlighter-rouge\">GKE_METADATA</code> instead of <code class=\"language-plaintext highlighter-rouge\">GCE_METADATA</code>.</li>\n  <li>A binding between the GSA(Google service account) and KSA(Kubernetes service account) MUST exist</li>\n</ol>\n\n<h2 id=\"enable-workload-identity-in-the-gke-cluster\">Enable workload identity in the GKE cluster</h2>\n\n<p>Source: <a href=\"https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity\">Workload Identity | Kubernetes Engine Documentation | Google Cloud</a></p>\n\n<h3 id=\"new-cluster\"><strong>New Cluster:</strong></h3>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">PROJECT_ID</span><span class=\"o\">=</span>jadia-project\n<span class=\"nv\">CLUSTER_NAME</span><span class=\"o\">=</span>ptdevops\n\ngcloud container clusters create <span class=\"nv\">$CLUSTER_NAME</span> <span class=\"se\">\\</span>\n  <span class=\"nt\">--release-channel</span> regular <span class=\"se\">\\</span>\n  <span class=\"nt\">--workload-pool</span><span class=\"o\">=</span><span class=\"nv\">$PROJECT</span>.svc.id.goog\n</code></pre></div></div>\n\n<h3 id=\"existing-cluster\"><strong>Existing cluster</strong>:</h3>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">PROJECT_ID</span><span class=\"o\">=</span>jadia-project\n<span class=\"nv\">CLUSTER_NAME</span><span class=\"o\">=</span>playops\n\ngcloud container clusters update <span class=\"nv\">$CLUSTER_NAME</span> <span class=\"se\">\\</span>\n  <span class=\"nt\">--workload-pool</span><span class=\"o\">=</span><span class=\"nv\">$PROJECT_ID</span>.svc.id.goog\n</code></pre></div></div>\n\n<p>Source: <a href=\"https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity#enable_on_existing_cluster\">https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity#enable_on_existing_cluster</a></p>\n\n<p>or you can go and edit the cluster from web interface and enable <em>workload identity</em>.</p>\n\n<p><strong>Enable workload identity in the node-pool:</strong></p>\n\n<p>Do this to all the node pools in the cluster</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">CLUSTER_NAME</span><span class=\"o\">=</span>playops\n<span class=\"nv\">NODE_POOL_NAME</span><span class=\"o\">=</span>standard-pool-1\n\ngcloud container node-pools update <span class=\"nv\">$NODE_POOL_NAME</span> <span class=\"se\">\\</span>\n  <span class=\"nt\">--cluster</span><span class=\"o\">=</span><span class=\"nv\">$CLUSTER_NAME</span> <span class=\"se\">\\</span>\n  <span class=\"nt\">--workload-metadata</span><span class=\"o\">=</span>GKE_METADATA\n</code></pre></div></div>\n\n<p>source: <a href=\"https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity#option_1_node_pool_modification\">https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity#option_1_node_pool_modification</a></p>\n\n<h3 id=\"create-a-binding-between-the-gsa-and-ksa\">Create a binding between the GSA and KSA</h3>\n\n<ul>\n  <li>Create a GSA with the required roles.</li>\n  <li>Create KSA  with annotation about the GSA</li>\n</ul>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">NAMESPACE</span><span class=\"o\">=</span>default\n<span class=\"nv\">GCLOUD_SERVICE_ACCOUNT_NAME</span><span class=\"o\">=</span>test-gsa\n<span class=\"nv\">PROJECT_NAME</span><span class=\"o\">=</span>playops\n<span class=\"nv\">KUBE_SERVICE_ACCOUNT_NAME</span><span class=\"o\">=</span>k8s-service-account\n\nkubectl annotate serviceaccount <span class=\"se\">\\</span>\n  <span class=\"nt\">--namespace</span> <span class=\"nv\">$NAMESPACE</span> <span class=\"se\">\\</span>\n    <span class=\"nv\">$KUBE_SERVICE_ACCOUNT_NAME</span> <span class=\"se\">\\</span>\n    iam.gke.io/gcp-service-account<span class=\"o\">=</span><span class=\"nv\">$GCLOUD_SERVICE_ACCOUNT_NAME</span>@<span class=\"nv\">$PROJECT_NAME</span>.iam.gserviceaccount.com\n</code></pre></div></div>\n\n<p>or just add annotation as:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">apiVersion</span><span class=\"pi\">:</span> <span class=\"s\">v1</span>\n<span class=\"na\">kind</span><span class=\"pi\">:</span> <span class=\"s\">ServiceAccount</span>\n<span class=\"na\">metadata</span><span class=\"pi\">:</span>\n  <span class=\"na\">annotations</span><span class=\"pi\">:</span>\n    <span class=\"s\">iam.gke.io/gcp-service-account</span><span class=\"pi\">:</span> <span class=\"s\">test-gsa@playops.iam.gserviceaccount.com</span>\n  <span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">k8s-service-account</span>\n</code></pre></div></div>\n\n<ul>\n  <li>Create binding</li>\n</ul>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">NAMESPACE</span><span class=\"o\">=</span>default\n<span class=\"nv\">KSA</span><span class=\"o\">=</span>k8s-service-account\n<span class=\"nv\">PROJECT_NAME</span><span class=\"o\">=</span>playops\n<span class=\"nv\">GSA</span><span class=\"o\">=</span>test-gsa@<span class=\"nv\">$NAMESPACE</span>.iam.gserviceaccount.com\n\ngcloud iam service-accounts add-iam-policy-binding <span class=\"se\">\\ </span>\n<span class=\"nt\">--role</span> roles/iam.workloadIdentityUser <span class=\"se\">\\</span>\n<span class=\"nt\">--member</span> <span class=\"s2\">\"serviceAccount:</span><span class=\"nv\">$PROJECT_NAME</span><span class=\"s2\">.svc.id.goog[</span><span class=\"nv\">$NAMESPACE</span><span class=\"s2\">/</span><span class=\"nv\">$KSA</span><span class=\"s2\">]\"</span> <span class=\"nv\">$GSA</span>\n</code></pre></div></div>\n\n<h3 id=\"test-if-workload-identity-is-working-or-not\">Test if workload identity is working or not</h3>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>kubectl run <span class=\"nt\">-it</span> <span class=\"nt\">--rm</span> <span class=\"nt\">--image</span> google/cloud-sdk:slim <span class=\"se\">\\</span>\n<span class=\"nt\">--serviceaccount</span> k8s-service-account <span class=\"se\">\\</span>\n<span class=\"nt\">--namespace</span> default workload-identity-test\n</code></pre></div></div>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\"># Inside the pod</span>\ngcloud auth list\n\n<span class=\"c\">#OUTPUT&gt;</span>\n<span class=\"c\">#root@workload-identity-test:/# gcloud auth list</span>\n<span class=\"c\">#              Credentialed Accounts</span>\n<span class=\"c\">#ACTIVE  ACCOUNT</span>\n<span class=\"c\">#*       test-gsa@playops.iam.gserviceaccount.com</span>\n</code></pre></div></div>\n\n<h2 id=\"references\">References</h2>\n\n<ol>\n  <li>\n    <p><a href=\"https://medium.com/google-cloud/updating-google-container-engine-vm-scopes-with-zero-downtime-50bff87e5f80\">Dinesh, Sandeep. “Updating Google Kubernetes Engine VM Scopes with Zero Downtime.” Medium. Last modified February 6, 2018. Accessed September 10, 2020.</a></p>\n  </li>\n  <li>\n    <p><a href=\"https://dzone.com/articles/enabling-gke-workload-identity\">“Enabling GKE Workload Identity - DZone Cloud.” Dzone.Com. Accessed September 10, 2020</a></p>\n  </li>\n  <li>\n    <p><a href=\"https://www.youtube.com/watch?v=2HmDZXbfA80\">“Node Management in GKE (Cloud Next ’19) - YouTube.” Accessed September 10, 2020</a></p>\n  </li>\n</ol>\n",
            "tags": ["Kubernetes"],
            "image": "https://jadia.dev/%7B%22path%22=%3E%22/assets/social-devops-python-preview.png%22,%20%22width%22=%3E1200,%20%22height%22=%3E628%7D"
        },
        
        {
            "id": "https://jadia.dev/2020/08/25/using-gitlab-ci-cd-to-build-and-store-container-images",
            "url": "https://jadia.dev/2020/08/25/using-gitlab-ci-cd-to-build-and-store-container-images",
            "title": "Using GitLab CI/CD to build and store container images",
            "date_published": "2020-08-25T11:36:00+00:00",
            
            "date_modified": "2020-08-25T11:36:00+00:00",
            
            "author": {
                "name": "Nitish Jadia",
                "url": "https://jadia.dev"
            },
            "summary": "<p>Often building container images consume a lot of bandwidth and back at home I don’t have a good internet connection to build images again and again.</p>\n\n",
            "content_html": "<p>Often building container images consume a lot of bandwidth and back at home I don’t have a good internet connection to build images again and again.</p>\n\n<p>Also, there are times when I have\nto, again and again, push the container images to Docker hub in a short period. I felt that they tend to slow down the upload speeds when I do this.\n(I’m not sure how accurate is this observation.)</p>\n\n<p>Instead of Docker Hub to host the repository and building images on my local machine, I thought of using GitLab’s CI/CD to do the job.</p>\n\n<h3 id=\"setting-up-repository-to-build-and-store-container-images\">Setting up repository to build and store container images</h3>\n\n<ol>\n  <li>\n    <p>Create a new <em>Project</em> in GitLab. <br />\n <img src=\"/assets/posts/gitlab_ci_cd/create_project.png\" alt=\"Create Project in GitLab\" /></p>\n  </li>\n  <li>\n    <p>Create a new file <code class=\"language-plaintext highlighter-rouge\">Docker.gitlab-ci.yml</code> in the <code class=\"language-plaintext highlighter-rouge\">master</code> branch as a template\n to use when we will use CI/CD pipeline to build the docker images.</p>\n  </li>\n</ol>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">#Docker.gitlab-ci.yml</span>\n\n<span class=\"s\">build:image:</span>\n  <span class=\"s\">image</span><span class=\"pi\">:</span> <span class=\"s\">docker:stable</span>\n  <span class=\"s\">services</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">docker:dind</span>\n\n  <span class=\"na\">variables</span><span class=\"pi\">:</span>\n    <span class=\"na\">DOCKER_HOST</span><span class=\"pi\">:</span> <span class=\"s\">tcp://docker:2375</span>\n    <span class=\"na\">DOCKER_DRIVER</span><span class=\"pi\">:</span> <span class=\"s\">overlay2</span>\n    <span class=\"na\">IMAGE_NAME</span><span class=\"pi\">:</span> <span class=\"s\">hello</span>                           <span class=\"c1\"># CHANGE IMAGE NAME</span>\n    <span class=\"na\">TAG</span><span class=\"pi\">:</span> <span class=\"s\">latest</span>                                 <span class=\"c1\"># EDIT TAG</span>\n\n  <span class=\"na\">before_script</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY</span>\n\n  <span class=\"na\">script</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"s\">docker build --pull -t $CI_REGISTRY_IMAGE/$IMAGE_NAME:$TAG .</span>\n    <span class=\"pi\">-</span> <span class=\"s\">docker push $CI_REGISTRY_IMAGE/$IMAGE_NAME:$TAG</span>\n</code></pre></div></div>\n\n<h3 id=\"building-a-container-image\">Building a container Image</h3>\n\n<ol>\n  <li>Create a new branch from <code class=\"language-plaintext highlighter-rouge\">master</code>.\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> git checkout <span class=\"nt\">-b</span> flask-app\n</code></pre></div>    </div>\n  </li>\n  <li>\n    <p>Add required files and <code class=\"language-plaintext highlighter-rouge\">Dockerfile</code> to the branch.</p>\n  </li>\n  <li>\n    <p>Use the <code class=\"language-plaintext highlighter-rouge\">Docker.gitlab-ci.yml</code> template to create a new\n<code class=\"language-plaintext highlighter-rouge\">.gitlab-ci.yml</code> file which will build the image. <br />\n  <strong>Remember:</strong> Change the variable <code class=\"language-plaintext highlighter-rouge\">IMAGE_NAME</code> in the yaml file with the name\n  of the image.</p>\n  </li>\n  <li>Push the changes and naviage to <strong>CI/CD</strong> and <strong>Container Registry</strong> section\n of the project to see the image build and stored images.</li>\n</ol>\n\n<p>I use <a href=\"https://gitlab.com/nitishjadia/build\">this GitLab repository</a> to do the job.\nYou can clone it and get started without doing the above steps.</p>\n",
            "tags": ["CI/CD"],
            "image": "https://jadia.dev/%7B%22path%22=%3E%22/assets/social-devops-python-preview.png%22,%20%22width%22=%3E1200,%20%22height%22=%3E628%7D"
        },
        
        {
            "id": "https://jadia.dev/2020/07/08/bitcoin-whitepaper",
            "url": "https://jadia.dev/2020/07/08/bitcoin-whitepaper",
            "title": "Bitcoin Whitepaper",
            "date_published": "2020-07-08T15:12:00+00:00",
            
            "date_modified": "2020-07-08T15:12:00+00:00",
            
            "author": {
                "name": "Nitish Jadia",
                "url": "https://jadia.dev"
            },
            "summary": "<h2 id=\"bitcoin-a-peer-to-peer-electronic-cash-system\">Bitcoin: A Peer-to-Peer Electronic Cash System</h2>\n\n",
            "content_html": "<h2 id=\"bitcoin-a-peer-to-peer-electronic-cash-system\">Bitcoin: A Peer-to-Peer Electronic Cash System</h2>\n\n<h3 id=\"introduction\">Introduction</h3>\n\n<p>Satoshi Nakamoto proposes an overarching solution to double spending problem using a peer-to-peer network which supports an electronic payment system based on cryptographic proof instead of trust unlike the the method used by financial institutions.\nA computational proof of the chronological order of transaction is generated by p2p distributed timestamp server. The reversal of transaction will be computationally impractical unless more than 50% of nodes are not intending to attack the network.</p>\n\n<h3 id=\"transactions\">Transactions</h3>\n\n<p>Each transaction is clubbed with the hash of the previous transaction and public key of next owner then signed by the person making this transaction. This forms a chain of transactions. This chain of digital signatures are called electronic coin.\nSolving double spending problem without any mediating third-party requires a node to be aware of all the transactions.</p>\n\n<ol>\n  <li>The transactions must be publicly announced.</li>\n  <li>All participants must agree on a single chronological order of all transactions.</li>\n</ol>\n\n<h3 id=\"timestamp-server\">Timestamp Server</h3>\n\n<p><img src=\"/assets/posts/bitcoin-whitepaper/timestamp.png\" alt=\"Bitcoin timestamp\" />\nTimestamp server generates a hash of the current block, it also includes timestamp of previous block, hence forming a chain.</p>\n\n<h3 id=\"proof-of-work\">Proof of work</h3>\n\n<p>The Proof-of-Work[PoW] involves guessing a nounce value which can generate a hash which starts with a required amount on zero bits. The block cannot be changed without redoing the work. This implies that to modify a past block, an attacker would have to redo the PoW for that block and all the blocks after it. Average work required is exponential in the number of zero bits required. PoW difficulty increases if blocks are being generated too fast.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">Y=H ( X || k )</code></p>\n\n<p>There exist no efficient algorithm to find value of <code class=\"language-plaintext highlighter-rouge\">k</code>(nounce).</p>\n\n<h3 id=\"network\">Network</h3>\n\n<p>New transactions are broadcasted to all nodes, all the nodes collect new transactions into a block and try to find PoW for that block. When PoW is found, the block is broadcasted to all the nodes. The block is accepted by the nodes if all the transactions in the block are valid and not already spent. The hash of the accepted block is considered as previous hash.\nNodes always consider longest chain to be the correct one and work on extending it.</p>\n\n<h3 id=\"incentive\">Incentive</h3>\n\n<p>Just like gold miners adding gold to the circulation, the bitcoin miners too get paid as block reward when they are successful in their PoW, that means, with each new block, the bitcoin in the economy increases.The incentive can also be funded with transaction fees.\nThe first transaction in a block is a special transaction that starts a new coin owned by the creator of the block.</p>\n\n<h3 id=\"saving-disk-space\">Saving disk space</h3>\n\n<p>Instead of storing whole Merkle Tree, we can stubbing off the branches off the tree and keeping the block header with no transactions. The hash value in the block header keeps the integrity of all its sub-branches and transactions.</p>\n\n<h3 id=\"payment-verification\">Payment Verification</h3>\n\n<p>A transaction can be verified by a user without running a full node network. It just has to keep a copy of block headers of the longest PoW chain. The user cannot check for validity of the transaction by himself because he won’t be having all the transactions with himself. He can just see that the transaction is a part of longest chain and this confirms that the transaction is valid. Verification requires executing only single hash.</p>\n\n<h3 id=\"privacy\">Privacy</h3>\n\n<p>Privacy can be maintained by keeping public keys anonymous. It is advisable to use a new key pair for each transaction to keep them from being linked to a common owner.</p>\n\n<h3 id=\"security\">Security</h3>\n\n<p>An attack can only try to change one of his own transactions to take back money he recently spent. The probability of a survival of a dishonest chain is fairly low.</p>\n",
            "tags": ["Blockchain","Whitepapers"],
            "image": "https://jadia.dev/%7B%22path%22=%3E%22/assets/social-devops-python-preview.png%22,%20%22width%22=%3E1120,%20%22height%22=%3E630%7D"
        }
        
    ]
}